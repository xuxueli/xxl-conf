<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="fileEncoding" value="utf-8" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="order" value="1"/>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:xxl-conf.properties</value>
			</list>
		</property>
	</bean>

	<!-- Main数据源  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>${xxl.conf.jdbc.driverClass}</value></property>
		<property name="url"><value>${xxl.conf.jdbc.url}</value></property>
		<property name="username"><value>${xxl.conf.jdbc.username}</value></property>
		<property name="password"><value>${xxl.conf.jdbc.password}</value></property>
		<property name="maxActive"><value>10</value></property>
		<property name="maxWait"><value>10000</value></property>
		<property name="maxIdle"><value>1</value></property>
		<property name="initialSize"><value>1</value></property>
		<property name="removeAbandoned"><value>true</value></property>
		<property name="testWhileIdle"><value>true</value></property>
		<property name="testOnBorrow"><value>false</value></property>
		<property name="validationQuery"><value>SELECT 1</value></property> 
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mybatis-mapper/*.xml"/>
	</bean>
    
    <!-- Template在Junit测试的时候，必须使用scope="prototype" -->
    <bean id="sqlSessionTemplate"  class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">  
          <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>



	<!-- 事务管理器（声明式事务） -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 启动事务注解（方式1：注解方式） -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- 事务通知（方式2：XML事务管理） -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="detail*" propagation="SUPPORTS" />
			<tx:method name="visit*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="check*" propagation="SUPPORTS" />
			<tx:method name="list*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="exception" />
		</tx:attributes>
	</tx:advice>

	<!-- AOP配置 -->
	<aop:config>
		<!-- 定义一个切入点 -->
		<aop:pointcut id="txoperation" expression="execution(* com.xxl.conf.admin.service.impl.*.*(..))" />
		<!-- 切入点事务通知 -->
		<aop:advisor pointcut-ref="txoperation" advice-ref="txAdvice" />
	</aop:config>
	
</beans>
